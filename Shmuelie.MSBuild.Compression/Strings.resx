<?xml version="1.0" encoding="utf-8"?>
<root>
	<!--
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format
		that is mostly human readable. The generation and parsing of the
		various data types are done through the TypeConverter classes
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple
		name/value pairs.

		Each data row contains a name, and value. The row also contains a
		type or mimetype. Type corresponds to a .NET class that support
		text/value conversion through the TypeConverter architecture.
		Classes that don't support this are serialized and stored with the
		mimetype set.

		The mimetype is used for serialized objects, and tells the
		ResXResourceReader how to depersist the object. This is currently not
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format
		that the ResXResourceWriter will generate, however the reader can
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->

	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Extract.ErrorCouldNotCreateDestinationDirectory">
		<value>MSB3931: Failed to extract to directory "{0}" because it could not be created.  {1}</value>
	</data>
	<data name="Extract.ErrorFileDoesNotExist">
		<value>MSB3932: Failed to extract file "{0}" because the file does not exist or is inaccessible.</value>
	</data>
	<data name="Extract.ErrorCouldNotOpenFile">
		<value>MSB3933: Failed to open zip file "{0}".  {1}</value>
	</data>
	<data name="Extract.ErrorExtractingResultsInFilesOutsideDestination">
		<value>MSB3934: Failed to open extract file "{0}" to "{1}" because it is outside the destination directory.</value>
	</data>
	<data name="Extract.ErrorCouldNotMakeFileWriteable">
		<value>MSB3935: Failed to extract file "{0}" because destination file "{1}" is read-only and could not be made writable.  {2}</value>
	</data>
	<data name="Extract.ErrorCouldNotExtractFile">
		<value>MSB3936: Failed to open extract file "{0}" to "{1}".  {2}</value>
	</data>
	<data name="Extract.ErrorParsingPatternInvalidPath">
		<value>MSB3937: Failed to parse pattern "{0}" because it contains an invalid path character.</value>
	</data>
	<data name="Extract.ErrorParsingPatternPropertyReferences">
		<value>MSB3938: Failed to parse pattern "{0}" because it contains a property reference which isn't supported.</value>
	</data>
	<data name="Extract.DidNotExtractBecauseOfFileMatch">
		<value>Did not extract from file "{0}" to file "{1}" because the "{2}" parameter was set to "{3}" in the project and the files' sizes and timestamps match.</value>
	</data>
	<data name="Extract.DidNotExtractBecauseOfFilter">
		<value>Did not extract file "{0}" because it didn't match the include filter or because it matched the exclude filter.</value>
	</data>
	<data name="Extract.FileComment">
		<value>Extracting file "{0}" to "{1}".</value>
	</data>
	<data name="ArchiveDirectory.ErrorDirectoryDoesNotExist">
		<value>MSB3941: Failed to archive directory "{0}" because it does not exist or is inaccessible.</value>
	</data>
	<data name="ArchiveDirectory.ErrorFileExists">
		<value>MSB3942: Failed to create archive file "{0}" because it already exists.  Please delete or rename the file and try again.</value>
	</data>
	<data name="ArchiveDirectory.ErrorFailed">
		<value>MSB3943: Failed to archive directory "{0}" to file "{1}".  {2}</value>
	</data>
	<data name="ArchiveDirectory.Comment">
		<value>Archiving directory "{0}" to "{1}".</value>
	</data>
	<data name="ArchiveDirectory.InvalidArchiveCompression">
		<value>Format {0} does not support {1} compression.</value>
	</data>
</root>